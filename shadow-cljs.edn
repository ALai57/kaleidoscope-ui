;; shadow-cljs configuration
{:source-paths ["src"
                "stories"
                "test"]

 :dependencies [;; Resolve conflicts
                [clj-commons/secretary "1.2.4"]
                [cljs-ajax "0.8.1"]

                [day8.re-frame/http-fx "0.2.3"]       ;; For re-frame HTTP effects
                [day8.re-frame/async-flow-fx "0.3.0"] ;; For better async startup
                [hickory "0.7.1"]
                [nubank/matcher-combinators "3.1.4" :scope "test" :exclusions [org.clojure/spec.alpha]]
                [re-frame "1.2.0"]
                [ring/ring-jetty-adapter "1.9.1"]
                [reagent "1.2.0"]
                [com.taoensso/timbre "5.1.2"]

                [cider/cider-nrepl "0.30.0"]

                [arttuka/reagent-material-ui "5.11.12-0"]]

 :builds {:app {:target :browser

                ;; Fixes a problem whereby three-js seems to be incompatible with
                ;; shadow/Closure compiler.
                ;; https://clojurians-log.clojureverse.org/shadow-cljs/2021-06-17
                ;; And https://github.com/ertugrulcetin/racing-game-cljs
                :js-options {:entry-keys ["module" "browser" "main"]}

                :output-dir "resources/public/js/compiled/kaleidoscope"
                :asset-path "js/compiled/kaleidoscope"

                ;; Split up the Frontend UI so that we have two smaller builds, instead of one
                ;; large Javascript file.
                :module-loader    true
                :modules          {:skeleton     {:init-fn kaleidoscope.ui.core/main}
                                   :kaleidoscope {:entries    [kaleidoscope.ui.views]
                                                  :depends-on #{:skeleton}}
                                   :editor       {:entries    [kaleidoscope.ui.pages.article-editor]
                                                  :depends-on #{:kaleidoscope :skeleton}}}
                :compiler-options {:static-fns          true
                                   :infer-externs       :auto
                                   :optimize-constants  true
                                   :output-feature-set  :es-next
                                   :pretty-print        false
                                   :optimization        :advanced
                                   :strip-type-prefixes #{"cljs.pprint"}}
                ;;:devtools   {:after-load app.main/reload!}}

                ;; Shadow has a pre-built idea that every build has a dev and release configuration
                :dev     {:closure-defines {kaleidoscope.ui.keycloak/AUTH_URL "http://localhost:8080"
                                            kaleidoscope.ui.keycloak/CLIENTID "test-login"
                                            kaleidoscope.ui.keycloak/REALM    "test"}}
                :release {:closure-defines {kaleidoscope.ui.keycloak/AUTH_URL "https://keycloak.kaleidoscope.com"
                                            kaleidoscope.ui.keycloak/REALM    "andrewslai"
                                            kaleidoscope.ui.keycloak/CLIENTID "andrewslai-frontend"}
                          :build-hooks     [(shadow.ui.build-report/hook {:output-to "build-reports/release-build-report.html"})]}
                }

          ;; Stories broke with lazy loading. Presumably because the NPM module works diffently from
          ;; browser target?
          :stories {:target     :npm-module
                    :ns-regexp  "-stories$"
                    :output-dir "resources/public/js/compiled/shareable_stories"}}}
