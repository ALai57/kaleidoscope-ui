;; shadow-cljs configuration
{:source-paths ["src"
                "stories"
                "test"]

 :dependencies [;; Resolve conflicts
                [clj-commons/secretary "1.2.4"]
                [cljs-ajax "0.8.1"]

                [day8.re-frame/http-fx "0.2.3"]       ;; For re-frame HTTP effects
                [day8.re-frame/async-flow-fx "0.3.0"] ;; For better async startup
                [hickory "0.7.1"]
                [nubank/matcher-combinators "3.1.4" :scope "test" :exclusions [org.clojure/spec.alpha]]
                [re-frame "1.2.0"]
                [reagent "1.2.0"]
                [com.taoensso/timbre "5.1.2"]

                [cider/cider-nrepl "0.30.0"]

                [arttuka/reagent-material-ui "5.11.12-0"]]

 :builds {:app {:target :browser

                ;; Fixes a problem whereby three-js seems to be incompatible with
                ;; shadow/Closure compiler.
                ;; https://clojurians-log.clojureverse.org/shadow-cljs/2021-06-17
                ;; And https://github.com/ertugrulcetin/racing-game-cljs
                :js-options {:entry-keys ["module" "browser" "main"]}

                :output-dir "resources/public/js/compiled/kaleidoscope"
                :asset-path "js/compiled/kaleidoscope"

                ;; Split up the Frontend UI so that we have two smaller builds, instead of one
                ;; large Javascript file.
                :module-loader    true
                :modules          {:skeleton     {:init-fn kaleidoscope.ui.core/main}
                                   :kaleidoscope {:entries    [kaleidoscope.ui.views]
                                                  :depends-on #{:skeleton}}
                                   :editor       {:entries    [kaleidoscope.ui.pages.article-editor]
                                                  :depends-on #{:kaleidoscope :skeleton}}}
                :compiler-options {:static-fns          true
                                   :infer-externs       :auto
                                   :optimize-constants  true
                                   :output-feature-set  :es-next
                                   :pretty-print        false
                                   :optimization        :advanced
                                   :warnings            {:redef false}
                                   :strip-type-prefixes #{"cljs.pprint"}}

                :closure-defines {;; Impossible to keep this API key safe, so Bugsnag makes it write-only
                                  ;; https://github.com/bugsnag/bugsnag-js/issues/595
                                  kaleidoscope.ui.clients.bugsnag/BUGSNAG_KEY "249774a7ded14185c826a7f33d609794"
                                  kaleidoscope.ui.version/VERSION             "0.0.1"
                                  }

                ;; Shadow has a pre-built idea that every build has a dev and release configuration
                :dev     {:closure-defines {kaleidoscope.ui.clients.keycloak/AUTH_URL   "http://localhost:8080"
                                            kaleidoscope.ui.clients.keycloak/REALM      "test"
                                            kaleidoscope.ui.clients.keycloak/CLIENTID   "test-login"}}
                :release {:closure-defines {kaleidoscope.ui.clients.keycloak/AUTH_URL   "https://keycloak.andrewslai.com"
                                            kaleidoscope.ui.clients.keycloak/REALM      "andrewslai"
                                            kaleidoscope.ui.clients.keycloak/CLIENTID   "andrewslai-frontend"}
                          :build-hooks     [(shadow.ui.build-report/hook {:output-to "build-reports/release-build-report.html"})]}
                }

          :stories {:target           :npm-module
                    :ns-regexp        "-stories$"
                    :output-dir       "resources/public/js/compiled/shareable_stories"
                    :compiler-options {:warnings {:redef false}}}}}
